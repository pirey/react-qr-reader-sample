{"version":3,"sources":["App.js","index.js"],"names":["Demo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","legacyMode","result","error","facingMode","delay","handleScan","bind","assertThisInitialized","handleError","handleLoad","handleFacingModeChange","handleDelayChange","handleImgSubmit","setState","err","console","e","target","value","parseInt","refs","reader","openImageDialog","centerContainerStyle","display","justifyContent","alignItems","minHeight","hozContainerStyle","margin","react_default","a","createElement","style","onClick","onChange","htmlFor","id","type","width","maxWidth","lib_default","onScan","onError","onLoad","ref","Component","ReactDOM","render","App_Demo","document","getElementById"],"mappings":"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","file":"static/js/main.f5f2804b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\n\nexport default class Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      legacyMode: false,\n      result: 'No result',\n      error: false,\n      facingMode: 'user',\n      delay: 500,\n    };\n\n    this.handleScan = this.handleScan.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoad = this.handleLoad.bind(this);\n    this.handleFacingModeChange = this.handleFacingModeChange.bind(this);\n    this.handleDelayChange = this.handleDelayChange.bind(this);\n    this.handleImgSubmit = this.handleImgSubmit.bind(this);\n  }\n  handleScan(result) {\n    if(result){\n      this.setState({ result });\n    }\n  }\n  handleError(err) {\n    console.error(err)\n    this.setState({ legacyMode: true })\n  }\n  handleLoad() {\n    this.setState({ loading: false });\n  }\n  handleFacingModeChange(e) {\n    this.setState({ facingMode: e.target.value });\n  }\n  handleDelayChange(e) {\n    this.setState({ delay: parseInt(e.target.value) });\n  }\n  handleImgSubmit(){\n    this.refs.reader.openImageDialog()\n  }\n  render() {\n    const centerContainerStyle = {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: 100,\n    }\n    const hozContainerStyle = {\n      margin: \"10px\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    };\n\n    if (this.state.error) {\n      return (\n        <div style={centerContainerStyle}>\n          <h3>Error</h3>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          {this.state.loading && (\n            <div style={centerContainerStyle}>\n              <h3>Loading</h3>\n            </div>\n          )}\n          <div style={{display: this.state.loading ? 'none' : 'block'}}>\n            {!this.state.legacyMode ? (\n              <div style={hozContainerStyle}>\n                <select\n                  value={this.state.facingMode}\n                  onChange={this.handleFacingModeChange}\n                  >\n                  <option value=\"user\">User Camera</option>\n                  <option value=\"environment\">Environment Camera</option>\n                </select>\n                <span>\n                  <label htmlFor=\"delay\">Delay in ms: </label>\n                  <input\n                    id=\"delay\"\n                    type=\"number\"\n                    value={this.state.delay}\n                    onChange={this.handleDelayChange}\n                    />\n                </span>\n              </div>\n            ) : (\n              <div style={hozContainerStyle}>\n                <h3>Webcam not supported</h3>\n                <button onClick={this.handleImgSubmit}>Submit an Image</button>\n              </div>\n            )}\n            <div style={{ width: '100%', maxWidth: '500px' }}>\n              <QrReader\n                onScan={this.handleScan}\n                onError={this.handleError}\n                onLoad={this.handleLoad}\n                facingMode={this.state.facingMode}\n                delay={this.state.delay}\n                legacyMode={this.state.legacyMode}\n                ref=\"reader\"\n              />\n            </div>\n            <h3>Decoded QR-Code: {this.state.result}</h3>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}